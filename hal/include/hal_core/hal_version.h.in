// MIT License
//
// Copyright (c) 2019 Ruhr University Bochum, Chair for Embedded Security. All Rights reserved.
// Copyright (c) 2019 Marc Fyrbiak, Sebastian Wallat, Max Hoffmann ("ORIGINAL AUTHORS"). All rights reserved.
// Copyright (c) 2021 Max Planck Institute for Security and Privacy. All Rights reserved.
// Copyright (c) 2021 Jörn Langheinrich, Julian Speith, Nils Albartus, René Walendy, Simon Klix ("ORIGINAL AUTHORS"). All Rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#pragma once

#include <string>

namespace hal
{
    namespace hal_version
    {
        // Complete git describe version string
        const std::string version = "@HAL_VERSION_RETURN@";

        // Major Version Number
        const int major = @HAL_VERSION_MAJOR@;

        // Minor Version Number
        const int minor = @HAL_VERSION_MINOR@;

        // Patch Version Number
        const int patch = @HAL_VERSION_PATCH@;

        // Tweak Version Number
        const int tweak = @HAL_VERSION_TWEAK@;

        // Additional number of commits since last assigned version number
        const int additional_commits = @HAL_VERSION_ADDITIONAL_COMMITS@;

        // Git Hash used for the current build
        const std::string git_hash = "@HAL_VERSION_HASH@";

        // Is it build from a dirty source directory?
        const bool is_dirty = @HAL_VERSION_DIRTY@;

        // Is the git repository broken on the development machine?
        const bool is_broken = @HAL_VERSION_BROKEN@;

        // Build Timestamp.
        const std::string build_timestamp = "@BUILD_TIMESTAMP@";
    }    // namespace hal_version
}    // namespace hal
